// <auto-generated />
using System;
using ApiMobile.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApiMobile.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ApiMobile.Models.Admins", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ApiMobile.Models.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ApiMobile.Models.Magazines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("Nb_of_realease");

                    b.Property<string>("Nom");

                    b.Property<double>("Price");

                    b.Property<string>("WallpagePATH");

                    b.HasKey("Id");

                    b.ToTable("Magazines");
                });

            modelBuilder.Entity("ApiMobile.Models.Payments", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MeansOfPayment");

                    b.Property<double>("PaymentAmount");

                    b.Property<bool>("Status");

                    b.HasKey("CId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ApiMobile.Models.Subscribes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("End_date_subscribe")
                        .IsRequired();

                    b.Property<DateTime?>("Start_date_subscribe")
                        .IsRequired();

                    b.Property<int?>("SubscribesMagazineID");

                    b.Property<int?>("SubscribesPaymentID");

                    b.HasKey("Id");

                    b.HasIndex("SubscribesMagazineID");

                    b.HasIndex("SubscribesPaymentID");

                    b.ToTable("Subscribes");
                });

            modelBuilder.Entity("ApiMobile.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(150);

                    b.Property<string>("AuthentificationKey");

                    b.Property<DateTime?>("Date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Firstname")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int?>("Phone");

                    b.Property<string>("Place_of_birth")
                        .HasMaxLength(100);

                    b.Property<int?>("UserContactID");

                    b.Property<int?>("UserSubscribeID");

                    b.HasKey("Id");

                    b.HasIndex("UserContactID");

                    b.HasIndex("UserSubscribeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiMobile.Models.Subscribes", b =>
                {
                    b.HasOne("ApiMobile.Models.Magazines", "MagazinesSubscribes")
                        .WithMany("SubscribeMagazine")
                        .HasForeignKey("SubscribesMagazineID");

                    b.HasOne("ApiMobile.Models.Payments", "PaymentsSubscribes")
                        .WithMany("SubscribesPayment")
                        .HasForeignKey("SubscribesPaymentID");
                });

            modelBuilder.Entity("ApiMobile.Models.Users", b =>
                {
                    b.HasOne("ApiMobile.Models.Contacts", "Contact")
                        .WithMany("UsersContact")
                        .HasForeignKey("UserContactID");

                    b.HasOne("ApiMobile.Models.Subscribes", "Subscribe")
                        .WithMany("UsersSubscribe")
                        .HasForeignKey("UserSubscribeID");
                });
#pragma warning restore 612, 618
        }
    }
}
